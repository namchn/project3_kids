<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
      <beans:property name="order" value="1" />
   </beans:bean>
   

   
   <beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName">
			<beans:value>oracle.jdbc.driver.OracleDriver</beans:value>
		</beans:property>
		<beans:property name="url">
			<beans:value>jdbc:oracle:thin:@183.101.196.162:1521:XE</beans:value>
		</beans:property>
		<beans:property name="username">
			<beans:value>project3</beans:value>
		</beans:property>
		<beans:property name="password">
			<beans:value>1234</beans:value>
		</beans:property>
	</beans:bean>

	<!-- 트랜잭션관리 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- sqlSession 찍어내는 객체 생성 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="typeAliasesPackage"
			value="mybatis" />
		<beans:property name="mapperLocations"
			value="classpath:/mappers/*.xml" /> <!-- 소스폴더가 루트 -->

	</beans:bean>

	<!-- sqlSession 객체 생성 -->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</beans:bean>
	   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">   <!-- view의 경로를 download.DownloadViewfh 만듦 -->
        <beans:property name="order" value="0" />   <!-- 우선순위가 0번 -->
    </beans:bean>
    <beans:bean id="download" class="com.kitri.project3.community.DownloadView" />
    
	<!-- 리소스전용 -->
 	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/resources/fullcalendar/**" location="/resources/fullcalendar/" />

	
   <context:component-scan base-package="com.kitri.project3" />
   
</beans:beans>